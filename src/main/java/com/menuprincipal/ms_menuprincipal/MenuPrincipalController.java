package com.menuprincipal.ms_menuprincipal;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

import java.util.Optional;

@RestController
@RequestMapping(path="/demo") // This means URL's start with /demo (after Application path)
public class MenuPrincipalController {
    @Autowired // This means to get the bean called characterRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private CharacterRepository characterRepository;

    @PostMapping(path="/add") // Map ONLY POST Requests
    public String addNewCharacter (@RequestParam String nom
            , @RequestParam String type) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        Character characterToAdd = new Character();
        characterToAdd.setNom(nom);
        characterToAdd.setType(type);
        characterRepository.save(characterToAdd);
        return "Saved";
    }

    @GetMapping(path="/Characters")
    public Iterable<Character> getAllCharacter() {
        // This returns a JSON or XML with the character
        return characterRepository.findAll();
    }

    //Récupérer un character par son Id
    @GetMapping(value = "/Characters/{id}")
    public Optional<Character> afficherUnPersonnageParId(@PathVariable int id) {
        System.out.println(id);
        return characterRepository.findById(id);

    }

    //Méthode permettant de supprimer un personnage
    @DeleteMapping(value = "/Characters/{id}")
    public void supprimerUnPersonnage(@PathVariable int id) {
        characterRepository.deleteById(id);

    }

}
